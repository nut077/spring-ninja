buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// plugins for matstruct
plugins {
    id 'net.ltgt.apt' version '0.8'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.github.nut077'
version = '0.0.1'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web')

    implementation ('org.springframework.boot:spring-boot-starter-undertow')

    implementation ('org.springframework.boot:spring-boot-starter-log4j2')
    
    //ทำให้ springboot อ่าน format yaml ที่ เป็น config ของ log4j ได้
    implementation ('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.7')
    
    //ทำให้ log4j ทำงานแบบ async
    implementation ('com.lmax:disruptor:3.4.2')
    
    // cache
    implementation ('org.springframework.boot:spring-boot-starter-cache')
    implementation ('com.github.ben-manes.caffeine:caffeine:2.6.2')

    // retry and recover
    implementation ('org.springframework.retry:spring-retry')

    testImplementation ('org.apache.commons:commons-lang3:3.8.1')

    // Custom Properties
    //annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    // mapstruct
    implementation('org.mapstruct:mapstruct:1.3.0.Final')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.3.0.Final')
    testAnnotationProcessor('org.mapstruct:mapstruct-processor:1.3.0.Final')


    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly ('com.h2database:h2')
    runtimeOnly ('org.springframework.boot:spring-boot-devtools')

    // lombok
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    testImplementation ('org.springframework.boot:spring-boot-starter-test')

    // JUnit 5
    testImplementation('org.junit.platform:junit-platform-launcher:1.3.2')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.3.2')

    //testImplementation('org.junit.vintage:junit-vintage-engine:5.3.2') // don't include this dependency if you don't want to use junit 4

    // Mockito 2
    testImplementation('org.mockito:mockito-core:2.24.0')
    testImplementation('org.mockito:mockito-junit-jupiter:2.24.0')
    testImplementation('info.solidsoft.mockito:mockito-java8:2.5.0')

    // Hamcrest
    testImplementation('org.hamcrest:hamcrest:2.1')
}

configurations {
    implementation {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'junit', module: 'junit' // excluded junit4
    }
}

